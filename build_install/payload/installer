#!/usr/bin/bash
echo "[ Unpacking and copying files ] "; sleep 2
if [ -e /usr/sbin/autolvm ]; then
	rm -f /usr/sbin/autolvm
fi
if [ -e /etc/udev/rules.d/10-autolvm.rules ]; then
	rm -f /etc/udev/rules.d/10-autolvm.rules
fi
TEMP="/tmp/autolvm_inst"
mkdir $TEMP
tar xf ./files.tar -C ${TEMP}/
cp ${TEMP}/autolvm /usr/sbin/
chmod 755 /usr/sbin/autolvm
rm -r /tmp/cleanup.sh &>/dev/null

userconfig(){
	echo "[ User Configuration ]"; sleep 1; echo ""
	echo "  Confirm the target volume group to autoexpand by typing out the name: "
	echo "  (note: to create a new volume, input desired name) "; echo ""
	while [[ -z $vgtarget ]]; do
		echo ""; echo "Detected volume groups: "; sleep 1		
		for vol in ${vgroups[@]}; do
			printf " [ $vol ]  "
		done
		echo ""; echo ""
		read -p 'Volume group name: ' vgtarget
		if [[ -z $vgtarget ]]; then
			echo ""; sleep 1
			echo "Please input a volume group to target"; echo ""
		fi
	done
	if [[ ! "${vgroups[*]}" =~ "${vgtarget}" ]]; then
		echo ""; echo "NOTE: New volume group will be created when the first"
		echo "additional storage is added"; sleep 1
	fi
	echo "";echo "Target all new capacity expansion to a single logical volume?" 
	read -p "[OPTIONAL - Type 'YES' or press 'enter' to skip]: " lvyes
	if [[ -z $lvyes ]] || [[ $lvyes != "YES" ]]; then
		sed -i "s/REPLACE/${vgtarget}/" ${TEMP}/10-autolvm.rules
		sed -i "s/THIS//" ${TEMP}/10-autolvm.rules
	else
		echo ""
		echo " [ Select an existing or type in a new logical volume ]"
		while [[ -z $lvtarget ]]; do
			echo ""; echo "Detected logical volumes: "; sleep 1
			for vol in ${lvols[@]}; do
				printf " [ $vol ]  "
			done
			echo ""; echo ""
			read -p "Logical volume name: [Type 'x' to skip]: " lvtarget
			if [[ -z $lvtarget ]]; then
				echo ""; sleep 1
				echo "Please input a volume to target, or type 'x' to skip and exit"; echo ""
			elif [[ $lvtarget == "x" ]]; then
				echo "Logical volume skipped, setting volume group.."
				sed -i "s/REPLACE/${vgtarget}/" ${TEMP}/10-autolvm.rules
				sed -i "s/THIS//" ${TEMP}/10-autolvm.rules
			else
				echo "Setting volume group and logical volume targets.."
				sed -i "s/REPLACE/${vgtarget}/" ${TEMP}/10-autolvm.rules
				sed -i "s/THIS/${lvtarget}/" ${TEMP}/10-autolvm.rules
				if [[ ! "${lvols[*]}" =~ "${lvtarget}" ]]; then
					echo ""; echo "NOTE: Logical volume will be created when the"
					echo "additional storage is added"
				fi
			fi
		done
	fi
}

reclaimboot(){
	vdaoffset=`echo $(($(fdisk -l /dev/vda | grep Disk | awk '{print $7}')-1999872))`
	vdafix=`echo $(( ${vdaoffset} * 512 ))`
	vda1end=`echo $(( ${vdaoffset} + 8 ))`
	pvresize --setphysicalvolumesize ${vdafix}b /dev/vda1 <<EOF
y
EOF
	fdisk /dev/vda <<EOF
d
n
p
1
2048
+${vda1end}
N
n
p
2


a
2
t
1
8e
w
EOF
	mkfs.ext2 /dev/vda2 &>/dev/null
	bootuuid=$(blkid | grep vda2 | awk '{print $2}' | tr -d '"')
	echo "${bootuuid} /boot    ext2    errors=remount-ro 0      1" >> /etc/fstab
	mount /dev/vda2 /mnt
	cp -a /boot/* /mnt/
	sync; umount /mnt
	rm -rf /boot/*
	mount /dev/vda2 /boot
	grub-mkconfig -o /boot/grub/grub.cfg &>/dev/null
	grub-install --root-directory=/ --boot-directory=/boot /dev/vda &>/dev/null
	update-initramfs -u &>/dev/null
}

if [ `mount | grep /boot | wc -l` -lt 1 ]; then
	echo "[ Setting up boot volume ]"; reclaimboot
fi

vgroups=(`vgs | awk '{print $1}'`); vgroups=("${vgroups[@]:1}")
lvols=(`lvs | awk '{print $1}'`); lvols=("${lvols[@]:1}")
lvtarget=""
vgtarget=""

if [[ "${vgroups[*]}" =~ "turnkey" && "${lvols[*]}" =~ "root" ]]; then
        echo "[ Default configuration detected ]"
        echo ""; echo "Default volume group: [ turnkey ]"
        echo "Default logical volume: [ root ]"; sleep 1
        echo ""; echo "Press ENTER to use the default configuration, or any other key to select a new storage target"
        read -p "Selection [enter]: " defaults
        if [[ -z $defaults ]] || [[ $defaults == "enter" ]] || [[ $defaults == "ENTER" ]]; then
		echo "Setting default targets: [ turnkey / root ]"
                sed -i "s/REPLACE/turnkey/" ${TEMP}/10-autolvm.rules
                sed -i "s/THIS/root/" ${TEMP}/10-autolvm.rules
	else
		userconfig
	fi
else
	userconfig
fi

sync; echo ""
echo "Selection saved - finishing installation "; echo ""; sleep 1
cp ${TEMP}/10-autolvm.rules /etc/udev/rules.d/
chmod 744 /etc/udev/rules.d/10-autolvm.rules
echo "[ Restarting udev.. ] "; sleep 3
unset targetlvol
udevadm control --reload-rules; sync
echo "[ Cleaning up ] "; sleep 2
rm -rf ${TEMP}/*; rm -r $TEMP; sync
echo "[ * Installation complete! * ] "; echo ""
inst=$(find / -iname autolv_installer*)
rmv_inst="/tmp/cleanup.sh"
echo "#!/usr/bin/bash" > $rmv_inst
echo "sleep 3" >> $rmv_inst
echo "rm -f ${inst} " >> $rmv_inst
bash $rmv_inst &>/dev/null &
